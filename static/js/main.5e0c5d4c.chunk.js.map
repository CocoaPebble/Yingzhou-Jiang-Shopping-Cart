{"version":3,"sources":["components/product.jsx","components/productList.jsx","App.js","serviceWorker.js","index.js"],"names":["Product","this","props","product","name","img","intro","discount","id","price","quantity","remaining","scope","className","src","alt","role","aria-label","onClick","onDecrement","type","onIncrement","onDelete","Component","picURL","ProductList","state","products","show","valid","handleIncrement","p","index","indexOf","setState","handleDecrement","handleDelete","pid","filter","handleChangeTotal","total","map","toFixed","handleReset","handleShow","handleClose","handleSubmit","e","target","checkVadility","preventDefault","stopPropagation","key","href","Modal","onHide","Header","closeButton","Title","Body","Tabs","defaultActiveKey","Tab","eventKey","title","Form","novalidate","validated","onSubmit","Group","Label","Control","required","placeholder","Feedback","Row","md","Button","Footer","variant","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5e0c5d4c.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Product extends Component {\n    render() {\n        const { name, img, intro, discount, id, price, quantity, remaining } = this.props.product;\n\n        return (\n            <tr>\n                <th scope='row'>\n                    <figure className='figure d-md-flex'>\n                        <img className='figure-img img-fluid rounded col-md-2 mr-3' src={img} alt='' />\n                        <figcaption>\n                            <h4>{name}</h4>\n                            <p>{intro}</p>\n                        </figcaption>\n                    </figure>\n                </th>\n                <td>{discount}%</td>\n                <td>\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button onClick={() => this.props.onDecrement(this.props.product)} type=\"button\" className=\"btn btn-outline-dark\">-</button>\n                        <span className=\"btn\">{quantity}</span>\n                        <button onClick={() => this.props.onIncrement(this.props.product)} type=\"button\" className=\"btn btn-outline-dark\">+</button>\n                    </div>\n\n                </td>\n                <td>${price * quantity}</td>\n                <td>\n                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                        <button type='button' className=\"btn btn-outline-info btn-sm\">{remaining} in stock</button>\n                        <button type='button' onClick={() => this.props.onDelete(id)} className=\"btn btn-danger btn-sm\">Delete</button>\n                    </div>\n                </td>\n            </tr>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Product from './product.jsx'\nimport { Modal, Button, Tabs, Tab, Form } from 'react-bootstrap'\n\nconst picURL = 'https://www.kfc.ca/Content/OnlineOrderingImages/StaticPage/story/story_28_lrg.jpg'\n\nexport default class ProductList extends Component {\n    state = {\n        products: [\n            {\n                id: 1, img: picURL, name: 'Large SmashFries', intro: 'French fries tossed in garlic',\n                discount: 20, quantity: 1, remaining: 6, price: 100\n            },\n            {\n                id: 2, img: picURL, name: 'Classic Smash Burger', intro: 'Angus Beef',\n                discount: 0, quantity: 1, remaining: 5, price: 100\n            },\n            {\n                id: 3, img: picURL, name: 'Double Bacon Samsh Burger', intro: 'Double certified angus beef',\n                discount: 15, quantity: 1, remaining: 4, price: 80\n            },\n            {\n                id: 4, img: picURL, name: 'Double Classic Smash Burger', intro: 'Red onion',\n                discount: 20, quantity: 1, remaining: 3, price: 200\n            },\n            {\n                id: 5, img: picURL, name: 'Smash Tots', intro: 'Crispy french fries',\n                discount: 30, quantity: 0, remaining: 0, price: 150\n            }\n        ],\n        show: false,\n        valid: false\n    }\n\n    handleIncrement = p => {\n        const products = [...this.state.products];\n        const index = products.indexOf(p);\n        products[index] = { ...p };\n        if (products[index].quantity < products[index].remaining)\n            products[index].quantity++;\n        this.setState({ products });\n    }\n\n    handleDecrement = p => {\n        const products = [...this.state.products];\n        const index = products.indexOf(p);\n        products[index] = { ...p };\n        if (products[index].quantity > 0)\n            products[index].quantity--;\n        this.setState({ products });\n    }\n\n    handleDelete = pid => {\n        const products = this.state.products.filter(p => p.id !== pid);\n        this.setState({ products });\n    }\n\n    handleChangeTotal = () => {\n        const products = [...this.state.products];\n        let total = 0;\n        products.map(p => (\n            total += p.quantity * p.price * (1 - p.discount / 100)\n        ))\n        return total.toFixed(2);\n    }\n\n    handleReset = () => {\n        const products = this.state.products.map(p => {\n            p.quantity = 0;\n            return p;\n        })\n        this.setState({ products });\n    }\n\n    handleShow = () => this.setState({ show: true });\n    handleClose = () => this.setState({ show: false });\n\n    handleSubmit = e => {\n        const form = e.target;\n        if (form.checkVadility === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        this.setState({ valid: true });\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th className='col'>Product</th>\n                            <th className='col'>Discount</th>\n                            <th className='col'>Quantity</th>\n                            <th className='col'>Price</th>\n                            <th className='col'>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.products.map(product => (\n                            <Product\n                                key={product.id}\n                                product={product}\n                                onIncrement={this.handleIncrement}\n                                onDecrement={this.handleDecrement}\n                                onDelete={this.handleDelete}\n                            />\n                        ))}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <th scope='row'>\n                                <button className='btn btn-warning mr-2' href='#'>\n                                    Continue Shopping\n                                </button>\n                                <button className='btn btn-info' href='#' onClick={this.handleReset}>\n                                    Reset\n                                </button>\n                            </th>\n                            <td className='hide-xs'></td>\n                            <td className='hide-xs'></td>\n                            <td> Total: <span className='font-weight-bold'>${this.handleChangeTotal()}</span></td>\n                            <td>\n                                <button onClick={this.handleShow} className='btn btn-success'>Checkout</button>\n                            </td>\n                        </tr>\n                        <tr></tr>\n                    </tfoot>\n                </table>\n\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Checkout</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Tabs defaultActiveKey=\"cc\" id=\"uncontrolled-tab-example\">\n                            <Tab eventKey=\"cc\" title=\"Credit Card\">\n                                <Form novalidate validated={this.state.valid} onSubmit={this.handleSubmit} className='m-2'>\n                                    <Form.Group>\n                                        <Form.Label>Name on card</Form.Label>\n                                        <Form.Control\n                                            required\n                                            type='text'\n                                            placeholder=''\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please fill name.\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label className='mt-2'>Credit card number</Form.Label>\n                                        <Form.Control\n                                            required\n                                            type='number'\n                                            placeholder='xxxx-xxxx-xxxx-xxxx'\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please fill card number.\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                    <Form.Row className='ml-1'>\n                                        <Form.Group md='6'>\n                                            <Form.Label>Exp.</Form.Label>\n                                            <Form.Control required type='number' placeholder='MM-YYYY'></Form.Control>\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                Please fill exp. date.\n                                            </Form.Control.Feedback>\n                                        </Form.Group>\n                                        <Form.Group md='6' className='ml-2'>\n                                            <Form.Label>CVV</Form.Label>\n                                            <Form.Control required type='number' placeholder='xxx'></Form.Control>\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                Need CVV.\n                                            </Form.Control.Feedback>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Button type=\"submit\">Pay</Button>\n                                </Form>\n                            </Tab>\n                            <Tab eventKey=\"pp\" title=\"PayPal\">\n                                <Button className=\"m-3\">My Paypal</Button>\n                            </Tab>\n                            <Tab eventKey=\"bank\" title=\"Bank Transfer\">\n                                <h3 className='m-3'>Bank Information</h3>\n                            </Tab>\n                        </Tabs>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport ProductList from './components/productList'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <ProductList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}